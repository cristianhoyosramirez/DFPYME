-- Column: nombre_comercial

-- ALTER TABLE medio_pago DROP COLUMN nombre_comercial;

ALTER TABLE medio_pago ADD COLUMN nombre_comercial character varying(100);


update medio_pago set nombre_comercial = 'INSTRUMENTO NO DEFINIDO'where codigo='1';
update medio_pago set nombre_comercial = 'EFECTIVO'where codigo='10';
update medio_pago set nombre_comercial = 'REVERSIÓN CRÉDITO AHORRO'where codigo='11';
update medio_pago set nombre_comercial = 'REVERSIÓN DÉBITO AHORRO'where codigo='12';
update medio_pago set nombre_comercial = 'CRÉDITO AHORRO'where codigo='13';
update medio_pago set nombre_comercial = 'DÉBITO AHORRO'where codigo='14';
update medio_pago set nombre_comercial = 'BOOKENTRY CRÉDITO'where codigo='15';
update medio_pago set nombre_comercial = 'BOOKENTRY DÉBITO'where codigo='16';
update medio_pago set nombre_comercial = 'CRÉDITO PAGO NEGOCIO CORPORATIVO (CTP)'where codigo='19';
update medio_pago set nombre_comercial = 'CRÉDITO ACH'where codigo='2';
update medio_pago set nombre_comercial = 'CHEQUE'where codigo='20';
update medio_pago set nombre_comercial = 'PROYECTO BANCARIO'where codigo='21';
update medio_pago set nombre_comercial = 'NOTA CAMBIARIA ESPERANDO ACEPTACIÓN'where codigo='24';
update medio_pago set nombre_comercial = 'CHEQUE CERTIFICADO'where codigo='25';
update medio_pago set nombre_comercial = 'CHEQUE LOCAL'where codigo='26';
update medio_pago set nombre_comercial = 'DÉBITO ACH'where codigo='3';
update medio_pago set nombre_comercial = 'TRANSFERENCIA DÉBITO'where codigo='31';
update medio_pago set nombre_comercial = 'PAGO Y DEPÓSITO PRE ACORDADO (PPD)'where codigo='34';
update medio_pago set nombre_comercial = 'PAGO NEGOCIO CORPORATIVO AHORROS CRÉDITO (CTP)'where codigo='37';
update medio_pago set nombre_comercial = 'REVERSIÓN DÉBITO DE DEMANDA ACH'where codigo='4';
update medio_pago set nombre_comercial = 'CONSIGNACIÓN BANCARIA'where codigo='42';
update medio_pago set nombre_comercial = 'NOTA CAMBIARIA'where codigo='44';
update medio_pago set nombre_comercial = 'TRANSFERENCIA CRÉDITO BANCARIO'where codigo='45';
update medio_pago set nombre_comercial = 'TRANSFERENCIA DÉBITO INTERBANCARIO'where codigo='46';
update medio_pago set nombre_comercial = 'TRANSFERENCIA DÉBITO BANCARIA'where codigo='47';
update medio_pago set nombre_comercial = 'TARJETA DE CRÉDITO'where codigo='48';
update medio_pago set nombre_comercial = 'TARJETA DÉBITO'where codigo='49';
update medio_pago set nombre_comercial = 'REVERSIÓN CRÉDITO DE DEMANDA ACH'where codigo='5';
update medio_pago set nombre_comercial = 'POSTGIRO'where codigo='50';
update medio_pago set nombre_comercial = 'PAGO COMERCIAL URGENTE'where codigo='52';
update medio_pago set nombre_comercial = 'PAGO TESORERÍA URGENTE'where codigo='53';
update medio_pago set nombre_comercial = 'CRÉDITO DE DEMANDA ACH'where codigo='6';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA'where codigo='60';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA POR EL ACREEDOR'where codigo='61';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA POR EL ACREEDOR, AVALADA POR EL BANCO'where codigo='62';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA POR EL ACREEDOR, AVALADA POR UN TERCERO'where codigo='63';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA POR EL BANCO'where codigo='64';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA POR UN BANCO AVALADA POR OTRO BANCO'where codigo='65';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA'where codigo='66';
update medio_pago set nombre_comercial = 'NOTA PROMISORIA FIRMADA POR UN TERCERO AVALADA POR UN BANCO'where codigo='67';
update medio_pago set nombre_comercial = 'DÉBITO DE DEMANDA ACH'where codigo='7';
update medio_pago set nombre_comercial = 'BONOS'where codigo='71';
update medio_pago set nombre_comercial = 'VALES'where codigo='72';
update medio_pago set nombre_comercial = 'RETIRO DE UNA NOTA POR EL ACREEDOR SOBRE UN TERCERO'where codigo='77';
update medio_pago set nombre_comercial = 'RETIRO DE UNA NOTA POR EL ACREEDOR SOBRE UN TERCERO AVALADA POR UN BANCO'where codigo='78';
update medio_pago set nombre_comercial = 'CLEARING NACIONAL O REGIONAL'where codigo='9';
update medio_pago set nombre_comercial = 'GIRO REFERENCIADO'where codigo='93';
update medio_pago set nombre_comercial = 'GIRO URGENTE'where codigo='94';
update medio_pago set nombre_comercial = 'GIRO FORMATO ABIERTO'where codigo='95';
update medio_pago set nombre_comercial = 'MÉTODO DE PAGO SOLICITADO NO USADO'where codigo='96';
update medio_pago set nombre_comercial = 'CLEARING ENTRE PARTNERS'where codigo='97';


-- Column: ruta

-- ALTER TABLE medio_pago DROP COLUMN ruta;

ALTER TABLE forma_pago ADD COLUMN ruta character varying(50);


-- ALTER TABLE configuracion_pedido DROP COLUMN codigo_pantalla;

ALTER TABLE configuracion_pedido ADD COLUMN codigo_pantalla boolean;
ALTER TABLE configuracion_pedido ALTER COLUMN codigo_pantalla SET DEFAULT false;
COMMENT ON COLUMN configuracion_pedido.codigo_pantalla IS 'Este campo me permite ver en pantalla al momento de llamar los productos si concateno el codigo con el nombre del producto';


-- Column: altura

-- ALTER TABLE configuracion_pedido DROP COLUMN altura;  14 de Octubre de 2024

ALTER TABLE configuracion_pedido ADD COLUMN altura integer;
update  configuracion_pedido  set altura=25;

CREATE TABLE entradas_salidas
(
  id serial NOT NULL,
  cantidad double precision,
  id_documento integer, -- Este campo se refiere a la llave primaria de los movimientos que se generan (Ventas , devoluciones , remisiones etc...)
  id_concepto_kardex integer, -- Este sirve para referirse a la tabla concepto kardex para ver el nombre del concepto y formar el constraint hacia esa tabla
  id_operacion integer, -- Este campo sirve para determinar si es entrada o salida y formar constraint a la tabla operacion que es la que la que me dice si es entrada o salida
  fecha date,
  inventario_anterior double precision,
  CONSTRAINT pk_entrada_salidas PRIMARY KEY (id),
  CONSTRAINT fk_id_concepto FOREIGN KEY (id_concepto_kardex)
      REFERENCES concepto_kardex (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_operacion FOREIGN KEY (id_operacion)
      REFERENCES operacion (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE entradas_salidas
  OWNER TO postgres;
COMMENT ON COLUMN entradas_salidas.id_documento IS 'Este campo se refiere a la llave primaria de los movimientos que se generan (Ventas , devoluciones , remisiones etc...)';
COMMENT ON COLUMN entradas_salidas.id_concepto_kardex IS 'Este sirve para referirse a la tabla concepto kardex para ver el nombre del concepto y formar el constraint hacia esa tabla ';
COMMENT ON COLUMN entradas_salidas.id_operacion IS 'Este campo sirve para determinar si es entrada o salida y formar constraint a la tabla operacion que es la que la que me dice si es entrada o salida ';

-- Table: entradas_salidas_manuales

-- DROP TABLE entradas_salidas_manuales;

CREATE TABLE entradas_salidas_manuales
(
  id_producto integer,
  cantidad double precision,
  nota character varying(200),
  id_usuario integer,
  fecha date,
  hora time with time zone,
  id_concepto integer,
  id serial NOT NULL,
  inventario_anterior double precision,
  inventario_actual double precision,
  CONSTRAINT pk_entr_sal PRIMARY KEY (id),
  CONSTRAINT fk_producto_entrada FOREIGN KEY (id_producto)
      REFERENCES producto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_usuario_entrada FOREIGN KEY (id_usuario)
      REFERENCES usuario_sistema (idusuario_sistema) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE entradas_salidas_manuales
  OWNER TO postgres;

-- Constraint: unique_product

-- ALTER TABLE producto DROP CONSTRAINT unique_product;

ALTER TABLE producto
  ADD CONSTRAINT unique_product UNIQUE(id);

-- Column: inventario_anterior

-- ALTER TABLE producto_factura_proveedor DROP COLUMN inventario_anterior;

ALTER TABLE producto_factura_proveedor ADD COLUMN inventario_anterior double precision;

ALTER TABLE producto_factura_proveedor ADD COLUMN inventario_actual double precision;


-- Column: inventario_anterior

-- ALTER TABLE entradas_salidas_manuales DROP COLUMN inventario_anterior;



ALTER TABLE detalle_devolucion_venta ADD COLUMN inventario_anterior double precision;
ALTER TABLE detalle_devolucion_venta ADD COLUMN inventario_actual double precision;


-- Table: movimiento_insumos

-- DROP TABLE movimiento_insumos;

CREATE TABLE movimiento_insumos
(
  id serial NOT NULL,
  fecha date,
  hora time with time zone,
  id_producto integer,
  inventario_anterior double precision,
  inventario_actual double precision,
  id_doc integer,
  tipo_doc character varying(50),
  CONSTRAINT pk_mov_insumos PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE movimiento_insumos
  OWNER TO postgres;

-- Table: tem_mov

-- DROP TABLE tem_mov;

CREATE TABLE tem_mov
(
  id serial NOT NULL,
  movimiento character varying(50),
  producto character varying(50),
  cantidad_inicial double precision,
  cantidad_final double precision,
  usuario character varying(50),
  cantidad_movi double precision,
  fecha date,
  documento character varying(50),
  id_usuario integer,
  nota character varying(200),
  CONSTRAINT pk_temp_mov PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE tem_mov
  OWNER TO postgres;


  ALTER TABLE item_documento_electronico ADD COLUMN inventario_anterior double precision;
ALTER TABLE item_documento_electronico ADD COLUMN inventario_actual double precision;

-- Column: id_pro_prin

-- ALTER TABLE movimiento_insumos DROP COLUMN id_pro_prin;

ALTER TABLE movimiento_insumos ADD COLUMN id_pro_prin integer;


CREATE TABLE reporte_impuestos (
    id SERIAL PRIMARY KEY,
    base_inc_0 CHARACTER VARYING(50),
    inc_0 CHARACTER VARYING(50),
    base_iva_0 CHARACTER VARYING(50),
    iva_0 CHARACTER VARYING(50),
    base_iva_5 CHARACTER VARYING(50),
    iva_5 CHARACTER VARYING(50),
    base_iva_19 CHARACTER VARYING(50),
    iva_19 CHARACTER VARYING(50),
    fecha DATE,
    total_inc CHARACTER VARYING(50),
    total_iva CHARACTER VARYING(50),
    total_venta CHARACTER VARYING(50),
    dia_proceso INTEGER,
    base_inc_8 CHARACTER VARYING(50),
    inc_8 CHARACTER VARYING(50)
);



